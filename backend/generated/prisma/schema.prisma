// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  password      String
  firstName     String
  lastName      String
  isActive      Boolean        @default(true)
  roleId        String
  role          Role           @relation(fields: [roleId], references: [id])
  officeId      String
  office        Office         @relation(fields: [officeId], references: [id])
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  lastLoginAt   DateTime?
  refreshTokens RefreshToken[]
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Role {
  id          String       @id @default(uuid())
  name        String       @unique
  description String?
  isActive    Boolean      @default(true)
  permissions Permission[]
  users       User[]
  menus       Menu[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Permission {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  isActive    Boolean  @default(true)
  roles       Role[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Menu {
  id        String   @id @default(uuid())
  name      String
  path      String?
  icon      String?
  parentId  String?
  parent    Menu?    @relation("MenuHierarchy", fields: [parentId], references: [id])
  children  Menu[]   @relation("MenuHierarchy")
  order     Int
  isActive  Boolean  @default(true)
  roles     Role[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Office {
  id        String   @id @default(uuid())
  name      String
  code      String   @unique
  parentId  String?
  parent    Office?  @relation("OfficeHierarchy", fields: [parentId], references: [id])
  children  Office[] @relation("OfficeHierarchy")
  isActive  Boolean  @default(true)
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
